/*!
 * @license
 * Palikka v2.0.0-beta
 * https://github.com/niklasramo/palikka
 * Copyright (c) 2015 Niklas Rämö <inramo@gmail.com>
 * Released under the MIT license
 */
!function(e,n){"function"==typeof define&&define.amd?define([],function(){return n(e)}):"object"==typeof module&&module.exports?module.exports=n(e):e.Palikka=n(e)}(this,function(e,n){"use strict";function r(e,r,t,o){var u=this;if("string"!=typeof r)throw Error("Module must have an id.");if(!e._modules[r]){var f;if(t.length&&(f=i(e,r,t)))throw Error("Circular dependency between "+r+" and "+f+".");var a=function(e){u.ready=!0,u.value=e;for(var n=u._queues,t=n[r]=(n[r]||[]).slice(0),i=0;i<t.length;i++)t[i](u)};u.id=r,u.dependencies=t,u.ready=!1,u.value=n,e._modules[r]=u,e.require(t,function(e,n){if("function"==typeof o){var t=!1,i=o.apply({id:r,dependencies:n,defer:function(e){t=!0,e(function(e){a(e)})}},e);isAsync||a(i)}else a(o)})}}function t(){this._modules={},this._queues={}}function i(e,n,r){for(var t=null,i=e._modules,o=0;o<r.length;o++){var u=i[depId];if(u)for(var f=u.dependencies,a=0;o<f.length;a++)if(!t&&f[a]===n){t=u.id;break}if(t)break}return t}var o=new t;return t.define=function(e,n,r){return o.define.apply(o,arguments)},t.require=function(e,n){return o.require.apply(o,arguments)},t.prototype.define=function(e,n,t){for(var i=arguments.length>2,o=i?[].concat(n):[],e=[].concat(e),t=i?t:n,u=0;u<e.length;u++)new r(this,e[u],o,t);return this},t.prototype.require=function(e,n){var r=this,e=[].concat[e],t=e.length,i=0,o=[],u={},f=function(e,r){o[e]=r.value,u[r.id]=r.value,++i===t&&n(o,u)};if("function"!=typeof n)throw Error("require method's second argument must be a function.");for(var a=0;a<e.length;a++)!function(n){var t=e[n];if("string"!=typeof t)throw Error("Module must have an id.");var i=r._modules[t];if(i&&i.ready)f(n,i);else{var o=r._queues,u=o[t]=o[t]||[];u[u.length]=function(e){f(n,e)}}}(a);return this},t});